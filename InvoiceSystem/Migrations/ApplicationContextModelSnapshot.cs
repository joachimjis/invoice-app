// <auto-generated />
using System;
using InvoiceSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InvoiceSystem.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("InvoiceSystem.Infrastructure.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AdressePhysique")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Commentaire")
                        .HasColumnType("text");

                    b.Property<string>("Commune")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ile")
                        .HasColumnType("text");

                    b.Property<string>("NomSociete")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroTelephone")
                        .HasColumnType("integer");

                    b.Property<string>("RCS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecteurActivite")
                        .HasColumnType("text");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("InvoiceSystem.Infrastructure.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NumeroFacture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Objet")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("InvoiceId");

                    b.HasIndex("ClientId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("InvoiceSystem.Infrastructure.Models.InvoiceLine", b =>
                {
                    b.Property<int>("InvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("InvoiceId")
                        .HasColumnType("integer");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("MontantHT")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MontantTTC")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MontantTVA")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("numeric");

                    b.HasKey("InvoiceLineId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceLines");
                });

            modelBuilder.Entity("InvoiceSystem.Infrastructure.Models.Parametre", b =>
                {
                    b.Property<int>("ParametreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LieuPostal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomSociete")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroTelephone")
                        .HasColumnType("integer");

                    b.Property<string>("Rib")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ParametreId");

                    b.ToTable("Parametres");
                });

            modelBuilder.Entity("InvoiceSystem.Infrastructure.Models.Invoice", b =>
                {
                    b.HasOne("InvoiceSystem.Infrastructure.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvoiceSystem.Infrastructure.Models.InvoiceLine", b =>
                {
                    b.HasOne("InvoiceSystem.Infrastructure.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
